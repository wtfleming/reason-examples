// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Caml_format = require("bs-platform/lib/js/caml_format.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Caml_js_exceptions = require("bs-platform/lib/js/caml_js_exceptions.js");

function price(size) {
  if (typeof size !== "number") {
    return 16.00 + (size._0 - 1 | 0) * 0.50;
  }
  switch (size) {
    case /* Small */0 :
        return 11.00;
    case /* Medium */1 :
        return 12.50;
    case /* Large */2 :
        return 14.00;
    
  }
}

function shirtSizeOfString(str) {
  switch (str) {
    case "L" :
        return /* Large */2;
    case "M" :
        return /* Medium */1;
    case "S" :
        return /* Small */0;
    case "XL" :
        return /* XLarge */{
                _0: 1
              };
    case "XXL" :
        return /* XLarge */{
                _0: 2
              };
    case "XXXL" :
        return /* XLarge */{
                _0: 3
              };
    case "XXXXL" :
        return /* XLarge */{
                _0: 4
              };
    default:
      return ;
  }
}

var calcButton = document.getElementById("calculate");

function getValue(element) {
  var __x = Belt_Option.map(element, (function (prim) {
          return prim;
        }));
  return Belt_Option.map(__x, (function (prim) {
                return prim.value;
              }));
}

function toInt(s) {
  var result;
  try {
    result = Caml_format.caml_int_of_string(s);
  }
  catch (raw_exn){
    var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);
    if (exn.RE_EXN_ID === "Failure") {
      if (exn._1 === "int_of_string") {
        return ;
      }
      throw exn;
    }
    throw exn;
  }
  return result;
}

function calculate(param) {
  var quantity = Belt_Option.flatMap(getValue(Caml_option.nullable_to_opt(document.getElementById("quantity"))), toInt);
  var unitPrice = Belt_Option.map(Belt_Option.flatMap(getValue(Caml_option.nullable_to_opt(document.getElementById("size"))), shirtSizeOfString), price);
  var totalPrice = unitPrice !== undefined && quantity !== undefined ? unitPrice * quantity : undefined;
  var priceString = totalPrice !== undefined ? totalPrice.toFixed(2) : "";
  Belt_Option.map(Caml_option.nullable_to_opt(document.getElementById("price")), (function (__x) {
          __x.innerText = priceString;
          
        }));
  
}

if (!(calcButton == null)) {
  calcButton.addEventListener("click", calculate);
}

var D;

var Doc;

var Elem;

var calcButton$1 = (calcButton == null) ? undefined : Caml_option.some(calcButton);

exports.D = D;
exports.Doc = Doc;
exports.Elem = Elem;
exports.price = price;
exports.shirtSizeOfString = shirtSizeOfString;
exports.calcButton = calcButton$1;
exports.getValue = getValue;
exports.toInt = toInt;
exports.calculate = calculate;
/* calcButton Not a pure module */
