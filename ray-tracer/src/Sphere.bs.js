// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Ray$RayTracer = require("./Ray.bs.js");
var Vec3$RayTracer = require("./Vec3.bs.js");
var HitRecord$RayTracer = require("./HitRecord.bs.js");

function make(center, radius, material) {
  return {
          center: center,
          radius: radius,
          material: material
        };
}

function hit(sphere, ray, tMin, tMax) {
  var oc = Vec3$RayTracer.sub(ray.origin, sphere.center);
  var a = Vec3$RayTracer.dot(ray.direction, ray.direction);
  var b = Vec3$RayTracer.dot(oc, ray.direction);
  var c = Vec3$RayTracer.dot(oc, oc) - sphere.radius * sphere.radius;
  var discriminant = b * b - a * c;
  if (discriminant <= 0.0) {
    return ;
  }
  var temp1 = (-b - Math.sqrt(discriminant)) / a;
  if (temp1 < tMax && temp1 > tMin) {
    var p = Ray$RayTracer.pointAtParameter(ray, temp1);
    return HitRecord$RayTracer.make(temp1, p, Vec3$RayTracer.div(Vec3$RayTracer.sub(p, sphere.center), sphere.radius), sphere.material);
  }
  var temp2 = (-b + Math.sqrt(discriminant)) / a;
  var p$1 = Ray$RayTracer.pointAtParameter(ray, temp2);
  if (temp2 < tMax && temp2 > tMin) {
    return HitRecord$RayTracer.make(temp2, p$1, Vec3$RayTracer.div(Vec3$RayTracer.sub(p$1, sphere.center), sphere.radius), sphere.material);
  }
  
}

exports.make = make;
exports.hit = hit;
/* No side effect */
