// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Ray$RayTracer = require("./Ray.bs.js");
var Vec3$RayTracer = require("./Vec3.bs.js");

function randomVectorInUnitDisk(param) {
  var randomVector = function (param) {
    return Vec3$RayTracer.sub(Vec3$RayTracer.mul(Vec3$RayTracer.make(Math.random(), Math.random(), Math.random()), 2.0), Vec3$RayTracer.make(1.0, 1.0, 0.0));
  };
  var p = randomVector(undefined);
  while(Vec3$RayTracer.dot(p, p) >= 1.0) {
    p = randomVector(undefined);
  };
  return p;
}

function make(lookFrom, lookAt, vUp, vFov, aspect, aperture, focusDistance) {
  var lensRadius = aperture / 2.0;
  var theta = vFov * Math.PI / 180.0;
  var halfHeight = Math.tan(theta / 2.0);
  var halfWidth = aspect * halfHeight;
  var w = Vec3$RayTracer.unitVector(Vec3$RayTracer.sub(lookFrom, lookAt));
  var u = Vec3$RayTracer.unitVector(Vec3$RayTracer.cross(vUp, w));
  var v = Vec3$RayTracer.cross(w, u);
  var lowerLeftCorner = Vec3$RayTracer.sub(Vec3$RayTracer.sub(Vec3$RayTracer.sub(lookFrom, Vec3$RayTracer.mul(u, halfWidth * focusDistance)), Vec3$RayTracer.mul(v, halfHeight * focusDistance)), Vec3$RayTracer.mul(w, focusDistance));
  var horizontal = Vec3$RayTracer.mul(u, 2.0 * halfWidth * focusDistance);
  var vertical = Vec3$RayTracer.mul(v, 2.0 * halfHeight * focusDistance);
  return {
          lowerLeftCorner: lowerLeftCorner,
          horizontal: horizontal,
          vertical: vertical,
          origin: lookFrom,
          u: u,
          v: v,
          lensRadius: lensRadius
        };
}

function getRay(camera, s, t) {
  var rd = Vec3$RayTracer.mul(randomVectorInUnitDisk(undefined), camera.lensRadius);
  var offset = Vec3$RayTracer.add(Vec3$RayTracer.mul(camera.u, rd.x), Vec3$RayTracer.mul(camera.v, rd.y));
  var rayDirection = Vec3$RayTracer.sub(Vec3$RayTracer.sub(Vec3$RayTracer.add(Vec3$RayTracer.add(camera.lowerLeftCorner, Vec3$RayTracer.mul(camera.horizontal, s)), Vec3$RayTracer.mul(camera.vertical, t)), camera.origin), offset);
  return Ray$RayTracer.make(Vec3$RayTracer.add(camera.origin, offset), rayDirection);
}

exports.randomVectorInUnitDisk = randomVectorInUnitDisk;
exports.make = make;
exports.getRay = getRay;
/* No side effect */
